"use strict";!function(){angular.module("nix.diet-graph-directive",["nix.track-api-client","angularMoment"]).run(["$templateCache",function(t){t.put("nix.diet-graph-directive.html",'<div class="nix_diet-graph">\n          <div class="panel panel-default panel-graph">\n            <div class="panel-heading">Diet Logging Graph</div>\n            <div class="panel-body text-center">\n              <div style="display: inline-block" class="heat-map-calendar">\n                <button class="previous" class="btn"><i class="fa fa-chevron-left"></i></button>\n                <button class="next" class="btn"><i class="fa fa-chevron-right"></i></button>\n                <div class="heatMap"></div>\n              </div>\n\n              <div class="row graph-summary" ng-if="vm.stats.total">\n                <div class="col-xs-6">\n                  <p>Total Day Tracked</p>\n                  <strong>{{vm.stats.total}} Days</strong>\n                </div>\n                <div class="col-xs-6">\n                  <p>% Days of Green</p>\n                  <strong>{{vm.stats.greenPercentage | number: 0}}%</strong>\n                </div>\n              </div>\n            </div>\n         </div>\n        </div>')}]).directive("dietGraph",["$filter",function(t){return{templateUrl:"nix.diet-graph-directive.html",replace:!0,restrict:"AE",controllerAs:"vm",scope:{},bindToController:{api:"=?",targetCalories:"=?"},controller:["$scope","nixTrackApiClient","moment",function(t,e,a){var n=this;n.targetCalories=n.targetCalories||2e3,n.legend=[85*n.targetCalories/100,92.5*n.targetCalories/100,n.targetCalories,107.5*n.targetCalories/100,115*n.targetCalories/100],n.afterLoadDomain=function(t){n.stats.calculate(t)},n.stats={currentMonth:new Date,calculate:function(t){t=this.currentMonth=t||this.currentMonth;var e=this.currentMonthTotals={};_.each(n.calendar,function(n,i){a(1e3*i).format("YYYY-MM")===a(t).format("YYYY-MM")&&(e[i]=n)}),this.total=_.keys(e).length,this.green=_.filter(e,function(t){return t<=n.targetCalories}).length,this.greenPercentage=this.green/this.total*100},currentMonthTotals:null,total:null,green:null,greenPercentage:null},n.loadTotals=function(){e.reports.totals({begin:a().utc().subtract(1,"month").startOf("month").format("YYYY-MM-DD"),timezone:a.tz.guess()||"US/Eastern"}).success(function(t){n.calendar={},angular.forEach(t.dates,function(t){n.calendar[a(t.date).unix()]=t.total_cal}),n.stats.calculate()})},n.loadTotals(),n.api={refresh:function(){return n.loadTotals()}}}],link:function(e,a,n,i){var o=new CalHeatMap,r={next:a.find(".next"),previous:a.find(".previous")};o.formatNumber=function(e){return t("number")(t("fdaRound")(e,"calories"),0)},o.init({tooltip:!0,itemSelector:a.find(".heatMap")[0],nextSelector:r.next[0],previousSelector:r.previous[0],domain:"month",subDomain:"x_day",subDomainTextFormat:"%d",range:1,start:new Date,minDate:new Date,maxDate:new Date,afterLoadPreviousDomain:function(t){i.afterLoadDomain(t),e.$apply()},afterLoadNextDomain:function(t){i.afterLoadDomain(t),e.$apply()},onMinDomainReached:function(t){r.previous.attr("disabled",t?"disabled":!1)},onMaxDomainReached:function(t){r.next.attr("disabled",t?"disabled":!1)},legend:i.legend,displayLegend:!0,legendHorizontalPosition:"center",cellSize:28,label:{position:"top",align:"left",offset:{x:-103,y:0}},weekStartOnMonday:!1,domainLabelFormat:"%B %Y",subDomainTitleFormat:{empty:"not tracked",filled:"{count} Calories"}}),e.$watchCollection("vm.calendar",function(){var t=i.calendar;t&&(o.update(t),o.options.data=t,o.options.minDate=new Date(1e3*+_.min(_.keys(t))),o.onMinDomainReached(o.minDomainIsReached(1e3*moment().startOf("month").unix())))})}}}])}();